
# --------------------------------------------------------------------------------
#
# Default NAP configuration parameters
#
# --------------------------------------------------------------------------------

# Sections:
#   - core
#   - resources 
#   - executable locations
#   - NAP analysis submodules
#   - additional configuration scripts
#   - additional Luna arguments
#   - LSF parameters
#   - AWS parameters


# --------------------------------------------------------------------------------
#
# Core parameters
#
# --------------------------------------------------------------------------------

# NAP version
NAP_VERSION=v1.00

# NAP data
NAP_DATE=14-Apr-2022

# final output folder/archive, if different from primary
# e.g. in AWS context
NAP_COPY_OUTPUT="${NAP_COPY_OUTPUT-.}"

# wipe nap/ folder at start (0/1)
NAP_FRESH_START="${NAP_FRESH_START-0}"

# leave intermediates after running (0/1)
NAP_TIDY="${NAP_TIDY-1}"

# use compressed EDFZ (0/1)
NAP_EDFZ="${NAP_EDFZ-1}"


# --------------------------------------------------------------------------------
#
# Resources
#
# --------------------------------------------------------------------------------

# general folder for key resources
NAP_RESOURCE_DIR='/PHShome/sq566/nsrr/common/resources'

##
## Annotations
##

# NAP's default annotation mappings
NAP_ANNOTS="${NAP_ANNOTS-`echo ${NAP_RESOURCE_DIR}/canonical/annots.txt`}"

# User-specified annotation remappings (else 'period' so @. works)
NAP_OPT_ANNOTS="${NAP_OPT_ANNOTS-.}"

##
## Signals
##

## Harmonized EDF

# User-specified signal aliases
NAP_OPT_ALIASES="${NAP_OPT_ALIASES-.}"

# User-specified canonical names (harmonized EDF)
NAP_OPT_SIGS="${NAP_OPT_SIGS-}"

# optional 'group' for the canonical file matching (otherwise, '.' = wildcard matching)
NAP_GROUP="${NAP_GROUP-.}"

# default harmonization canonical signals file (default = ${NAP_RESOURCE_DIR}/canonical/harm.txt ) 
NAP_SIGS="${NAP_SIGS-`echo ${NAP_RESOURCE_DIR}/canonical/harm.txt`}"


## Base EDF

# User-specified canonical (base EDF)
NAP_BASE_OPT_SIGS="${NAP_BASE_OPT_SIGS-}"

# default base canonical signals file (default = ${NAP_RESOURCE_DIR}/canonical/base.txt ) 
NAP_BASE_SIGS="${NAP_BASE_SIGS-`echo ${NAP_RESOURCE_DIR}/canonical/base.txt`}"


# --------------------------------------------------------------------------------
#
# SOAP & POPS
#
# --------------------------------------------------------------------------------

# SOAP model (defined in terms of SOAP_SIG)
NAP_SOAP_MOD="${NAP_SOAP_MOD-`echo ${NAP_RESOURCE_DIR}/soap/soap.model.1`}"

# SOAP channel (will be mapped to SOAP_SIG), default = C4_M1  [ harmonized EDF ] 
NAP_SOAP_CH="${NAP_SOAP_CH-C4_M1}"


# POPS training data folder (default = ${NAP_RESOURCE_DIR}/pops/ )
NAP_POPS_DIR="${NAP_POPS_DIR-`echo ${NAP_RESOURCE_DIR}/pops/`}"
NAP_POPS_M1_DIR="${NAP_POPS_DIR-`echo ${NAP_RESOURCE_DIR}/pops/m1`}"

# POPS model version (default = v1)
NAP_POPS_VER="${NAP_POPS_VER-v1}"

# POPS feature file (default ${NAP_POPS_DIR}/${NAP_POPS_VER}.ftr )
NAP_POPS_FTR="${NAP_POPS_FTR-`echo ${NAP_POPS_DIR}/${NAP_POPS_VER}.ftr`}"
NAP_POPS_FTR_M1="/PHShome/sq566/nsrr/common/resources/pops/m1/m1.ftr"

# POPS model file (default ${NAP_POPS_DIR}/${NAP_POPS_VER}.mod )
NAP_POPS_MOD="${NAP_POPS_MOD-`echo ${NAP_POPS_DIR}/${NAP_POPS_VER}.mod`}"
NAP_POPS_MOD_M1="/PHShome/sq566/nsrr/common/resources/pops/m1/m1.mod"

# POPS extra path for SVDs (POPS folder)
NAP_POPS_PATH="/PHShome/sq566/nsrr/common/resources/pops"
NAP_POPS_PATH_M1="/PHShome/sq566/nsrr/common/resources/pops/m1"

# POPS elapsed sleep priors (to turn off, set NAP_POPS_PRIORS=.)
NAP_POPS_PRIORS="${NAP_POPS_PRIORS-`echo ${NAP_POPS_DIR}/${NAP_POPS_VER}.espriors`}"


# --------------------------------------------------------------------------------
#
# Misc/CODA resources
#
# --------------------------------------------------------------------------------

# resources folder for CODA (e.g. norms, for plots, etc) ** not currently used ** 
NAP_CODA_RESOURCE_DIR="${NAP_CODA_RESOURCE_DIR-`echo ${NAP_RESOURCE_DIR}/coda/`}"

# individual-level meta-data: comma-delimited list of tab-delimited files, w/ ID as first col.
NAP_INDIV_METADATA="${NAP_INDIV_METADATA-}"


# --------------------------------------------------------------------------------
#
# Executable locations
#
# --------------------------------------------------------------------------------

# Primary folder for all executables 
# (unless otherwise specified below for particular files)
NAP_EXE_DIR="${NAP_EXE_DIR-/PHShome/sq566/luna-base}"

# Path to luna 
NAP_LUNA="${NAP_LUNA-`echo ${NAP_EXE_DIR}/luna`}"

# Path to destrat
NAP_DESTRAT="${NAP_DESTRAT-`echo ${NAP_EXE_DIR}/destrat`}"

# Path to fixrows utility
NAP_FIXROWS="${NAP_FIXROWS-`echo ${NAP_EXE_DIR}/fixrows`}"

# Path to behead
NAP_BEHEAD="${NAP_BEHEAD-`echo ${NAP_EXE_DIR}/behead`}"

# Path to R
NAP_R="/apps/source/R/3.6.3/lib64/R/bin/Rscript"

# Path to any local R libraries
NAP_R_LIB="/PHShome/sq566/R/x86_64-pc-linux-gnu-library/3.6"

# Path to Matlab
NAP_MATLAB="${NAP_MATLAB-matlab}"

# Path to AWS CLI 
NAP_AWS_CLI="${NAP_AWS_CLI-aws}"


# --------------------------------------------------------------------------------
#
# User-specified additional configuration scripts
#
# --------------------------------------------------------------------------------

# these are run once for each batch of jobs (i.e. call of napn.sh )
#       
#  nb.  nap.sh              -->  napn.sh                  --> nap1.sh
#       (handles all jobs)       (single batch of jobs )      (called repeatedly by napn.sh)

# User-specified config bash code 
NAP_CONFIG_SOURCE="${NAP_CONFIG_SOURCE-}"


# --------------------------------------------------------------------------------
#
# Flags to turn on/off particular submodules of NAP
# along with analysis options for some components
#
# --------------------------------------------------------------------------------

# Primary steps
#  1) show channel/annotation mapping
#      QUIT here if NAP_HARMONIZE_ONLY == 1
#  2) original EDF/hypnogram stats 
#      NAP_DO_MTM

#  3) make new EDFs (harmonized & base)

#  4) [ if NAP_DO_POPS , and HAS_EEG ] do SOAP/POPS  
#       if NAP_DERIVED_METRICS == 0 , quit here
#  5) derived metrics & flagging issues
#    NAP_DO_RESPIRATORY
#    NAP_DO_SPINDLES
#    NAP_DO_POLARITY
#    NAP_DO_PSD

# quit NAP after showing the initial channel & label harmonization
# i.e. can be used to test for coverage of mapping files, prior
# to the main run
NAP_HARMONIZE_ONLY="${NAP_HARMONIZE_ONLY-0}"

# devel mode: 0 -> skip generation of all NAP datasets (i.e. for repeat runs)
NAP_MAKE_DATA="${NAP_MAKE_DATA-1}"

# devel mode: 0 -> skip coda1 (i.e. for debug repeat runs)
NAP_DO_CODA1="${NAP_DO_CODA1-1}"

# calculate derived metrics?
NAP_DERIVED_METRICS="${NAP_DERIVED_METRICS-1}"

# Respiratory/Matlab analysis
NAP_DO_RESPIRATORY="${NAP_DO_RESPIRATORY-0}"

# EEG polarity checks
NAP_DO_POLARITY="${NAP_DO_POLARITY-1}"

# Spindles/SO
NAP_DO_SPINDLES="${NAP_DO_SPINDLES-1}"

# PSD
NAP_DO_PSD="${NAP_DO_PSD-1}"

# MTM spectrograms
NAP_DO_MTM="${NAP_DO_MTM-1}"
# Minumum SR for MTM to be performed on this channel
NAP_MTM_MIN_SAMPLE_RATE="${NAP_MTM_MIN_SAMPLE_RATE-50}"

# CHEP-MASK ep-th threshold (for base EDF)
NAP_CHEP_TH="${NAP_CHEP_TH-5}"

# POPS automatic staging
NAP_DO_POPS="${NAP_DO_POPS-1}"

# SOAP
NAP_DO_SOAP="${NAP_DO_SOAP-1}"

# Harmonized EDF properties: require min. of 1 Hz to 500 Hz
NAP_HARM_SR_LWR=1
NAP_HARM_SR_UPR=500

# Base EDF properties
NAP_BASE_FRQ_LWR="${NAP_BASE_FRQ_UPR-0.5}"
NAP_BASE_FRQ_UPR="${NAP_BASE_FRQ_UPR-48}"
NAP_BASE_FIR_TW="${NAP_BASE_FIR_TW-1}"
NAP_BASE_FIR_RIPPLE="${NAP_BASE_FIR_RIPPLE-0.02}"

# --------------------------------------------------------------------------------
#
# Optional Luna arguments
#
# --------------------------------------------------------------------------------

# Arguments for the --build command to generate a sample list, e.g. ext=.dat
NAP_SLST_BUILD_FLAGS="${NAP_SLST_BUILD_FLAGS-}"

# Generic arguments for all other Luna commands, e.g. path=xyz 
NAP_LUNA_ARGS="${NAP_LUNA_ARGS-}"

# epoch level annots used to organize staging
NAP_STAGING_ANNOTS="${NAP_STAGING_ANNOTS-W,N1,N2,N3,R,?,L,M,U}"
NAP_CORE_STAGING_ANNOTS="${NAP_STAGING_ANNOTS-W,N1,N2,N3,R}"

# --------------------------------------------------------------------------------
#
# LSF-specific arguments
#
# --------------------------------------------------------------------------------

# Parallelization factor (1 = run locally, i.e. rather than use LSF)
NAP_JOBN="${NAP_JOBN-20}"

# misc LSF parameters: these defaults are specific to BWH/ERIS cluster
NAP_LSF_QUEUE="${NAP_LSF_QUEUE--q medium}"
NAP_LSF_RUSAGE="${NAP_LSF_RUSAGE--R 'rusage[mem=5000]'}"
NAP_LSF_NODES="${NAP_LSF_NODES--m 'cn075 cn076'}"


# TODO: add options to pass scheduler commands other than bsub, to
#  provide support for different clusters


# --------------------------------------------------------------------------------
#
# AWS portal parameters
#
# --------------------------------------------------------------------------------

# are we running in AWS portal mode? 1=on, 0=off
NAP_AWS_PORTAL_MODE="${NAP_AWS_PORTAL_MODE-0}"

# AWS user profile (needed if running in AWS portal mode)
NAP_AWS_PROFILE="${NAP_AWS_PROFILE-}"

